<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

<modelVersion>4.0.0</modelVersion>
<groupId>io.cryostat</groupId>
<artifactId>cryostat-agent</artifactId>
<version>0.4.0-SNAPSHOT</version>
<packaging>jar</packaging>
<name>cryostat-agent</name>
<url>http://maven.apache.org</url>

<repositories>
  <repository>
    <id>github</id>
    <url>https://maven.pkg.github.com/cryostatio/cryostat-core</url>
  </repository>
</repositories>

<distributionManagement>
  <repository>
    <id>github</id>
    <name>GitHub Packages</name>
    <url>https://maven.pkg.github.com/cryostatio/cryostat-agent</url>
  </repository>
</distributionManagement>

<properties>
  <mainClass>io.cryostat.agent.Agent</mainClass>
  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  <java.version>11</java.version>
  <maven.compiler.target>${java.version}</maven.compiler.target>
  <maven.compiler.source>${java.version}</maven.compiler.source>

  <io.reactiverse.plugin.version>1.0.27</io.reactiverse.plugin.version>
  <org.apache.maven.plugins.jar.version>3.3.0</org.apache.maven.plugins.jar.version>
  <org.apache.maven.plugins.shade.version>3.5.1</org.apache.maven.plugins.shade.version>
  <org.apache.maven.plugins.compiler.version>3.11.0</org.apache.maven.plugins.compiler.version>
  <org.apache.maven.plugins.surefire.version>2.22.2</org.apache.maven.plugins.surefire.version>
  <org.apache.maven.plugins.failsafe.version>${org.apache.maven.plugins.surefire.version}</org.apache.maven.plugins.failsafe.version>
  <org.apache.maven.plugins.site.version>3.12.1</org.apache.maven.plugins.site.version>
  <org.apache.maven.plugins.info.reports.version>3.5.0</org.apache.maven.plugins.info.reports.version>
  <org.apache.maven.plugins.clean.version>3.2.0</org.apache.maven.plugins.clean.version>
  <org.apache.maven.plugins.resources.version>3.3.0</org.apache.maven.plugins.resources.version>
  <org.apache.maven.plugins.assembly.version>3.4.2</org.apache.maven.plugins.assembly.version>
  <com.mycila.license.maven.plugin.version>4.3</com.mycila.license.maven.plugin.version>
  <org.owasp.dependency.check.version>9.0.2</org.owasp.dependency.check.version>

  <!-- Use a separate property for dependency alignment purposes. -->
  <com.google.dagger.version>2.47</com.google.dagger.version>
  <com.google.dagger.compiler.version>${com.google.dagger.version}</com.google.dagger.compiler.version>

  <io.cryostat.core.version>2.24.0</io.cryostat.core.version>

  <org.apache.commons.io.version>2.13.0</org.apache.commons.io.version>
  <org.apache.httpcomponents.httpclient.version>4.5.14</org.apache.httpcomponents.httpclient.version>
  <org.apache.httpcomponents.httpmime.version>${org.apache.httpcomponents.httpclient.version}</org.apache.httpcomponents.httpmime.version>
  <com.fasterxml.jackson.version>2.15.2</com.fasterxml.jackson.version>
  <org.eclipse.microprofile.config.api.version>3.0.3</org.eclipse.microprofile.config.api.version>
  <javax.annotation.version>1.3.2</javax.annotation.version><!-- used by smallrye -->
  <io.smallrye.config.version>2.12.3</io.smallrye.config.version>
  <org.slf4j.version>2.0.7</org.slf4j.version>
  <org.projectnessie.cel.bom.version>0.4.3</org.projectnessie.cel.bom.version>
  <com.google.protobuf-java.version>3.22.3</com.google.protobuf-java.version>
  <com.redhat.insights.agent.version>0.9.0</com.redhat.insights.agent.version>

  <com.github.spotbugs.version>4.8.2</com.github.spotbugs.version>
  <com.github.spotbugs.plugin.version>4.8.1.0</com.github.spotbugs.plugin.version>
  <org.junit.jupiter.version>5.10.1</org.junit.jupiter.version>
  <org.hamcrest.version>2.2</org.hamcrest.version>
  <org.mockito.version>5.2.0</org.mockito.version>
  <org.jacoco.maven.plugin.version>0.8.11</org.jacoco.maven.plugin.version>
  <com.diffplug.spotless.maven.plugin.version>2.41.0</com.diffplug.spotless.maven.plugin.version>
  <com.google.googlejavaformat.version>1.17.0</com.google.googlejavaformat.version>
  <org.jsoup.version>1.15.3</org.jsoup.version>

  <shade.prefix>io.cryostat.agent.shaded</shade.prefix>
</properties>

<dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.projectnessie.cel</groupId>
      <artifactId>cel-bom</artifactId>
      <version>${org.projectnessie.cel.bom.version}</version>
      <type>pom</type>
      <scope>import</scope>
      <exclusions>
        <exclusion>
          <groupId>com.google.protobuf</groupId>
          <artifactId>protobuf-java</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
</dependencyManagement>
<dependencies>
  <dependency>
    <groupId>com.google.dagger</groupId>
    <artifactId>dagger</artifactId>
    <version>${com.google.dagger.version}</version>
    <scope>compile</scope>
  </dependency>
  <dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-api</artifactId>
    <version>${org.slf4j.version}</version>
    <scope>compile</scope>
    <optional>true</optional>
  </dependency>
  <!-- TODO remove this SLF4J provider. We should just depend on what SLF4J provider is available in the attached
        application's classpath at runtime, if any. -->
  <dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-simple</artifactId>
    <version>${org.slf4j.version}</version>
  </dependency>
  <dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>jcl-over-slf4j</artifactId>
    <version>${org.slf4j.version}</version>
    <scope>runtime</scope>
    <optional>true</optional>
  </dependency>
  <dependency>
    <groupId>io.cryostat</groupId>
    <!-- This is only used for computing our own JVM's JVM ID - that part could be extracted out of -core -->
    <artifactId>cryostat-core</artifactId>
    <version>${io.cryostat.core.version}</version>
    <exclusions>
      <exclusion>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
      </exclusion>
    </exclusions>
  </dependency>
  <dependency>
    <groupId>org.projectnessie.cel</groupId>
    <artifactId>cel-tools</artifactId>
  </dependency>
  <!-- FIXME this is a forced version override of the protobuf required by projectnessie -->
  <dependency>
    <groupId>com.google.protobuf</groupId>
    <artifactId>protobuf-java</artifactId>
    <version>${com.google.protobuf-java.version}</version>
  </dependency>
  <dependency>
    <groupId>commons-io</groupId>
    <artifactId>commons-io</artifactId>
    <version>${org.apache.commons.io.version}</version>
  </dependency>
  <dependency>
    <groupId>org.apache.httpcomponents</groupId>
    <artifactId>httpclient</artifactId>
    <version>${org.apache.httpcomponents.httpclient.version}</version>
  </dependency>
  <dependency>
    <groupId>org.apache.httpcomponents</groupId>
    <artifactId>httpmime</artifactId>
    <version>${org.apache.httpcomponents.httpmime.version}</version>
  </dependency>
  <dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>${com.fasterxml.jackson.version}</version>
  </dependency>
  <dependency>
    <groupId>javax.annotation</groupId>
    <artifactId>javax.annotation-api</artifactId>
    <version>${javax.annotation.version}</version>
  </dependency>
  <dependency>
    <groupId>org.eclipse.microprofile.config</groupId>
    <artifactId>microprofile-config-api</artifactId>
    <version>${org.eclipse.microprofile.config.api.version}</version>
    <scope>compile</scope>
  </dependency>
  <dependency>
    <groupId>io.smallrye.config</groupId>
    <artifactId>smallrye-config</artifactId>
    <version>${io.smallrye.config.version}</version>
    <scope>runtime</scope>
  </dependency>
  <dependency>
    <groupId>com.redhat.insights</groupId>
    <artifactId>runtimes-agent</artifactId>
    <version>${com.redhat.insights.agent.version}</version>
    <classifier>shaded</classifier>
    <exclusions>
      <exclusion>
        <groupId>jdk.tools</groupId>
        <artifactId>jdk.tools</artifactId>
      </exclusion>
    </exclusions>
  </dependency>

  <!-- test deps -->
  <dependency>
    <groupId>org.junit.jupiter</groupId>
    <artifactId>junit-jupiter</artifactId>
    <version>${org.junit.jupiter.version}</version>
    <scope>test</scope>
  </dependency>
  <dependency>
    <groupId>org.hamcrest</groupId>
    <artifactId>hamcrest</artifactId>
    <version>${org.hamcrest.version}</version>
    <scope>test</scope>
  </dependency>
  <dependency>
    <groupId>org.mockito</groupId>
    <artifactId>mockito-junit-jupiter</artifactId>
    <version>${org.mockito.version}</version>
    <scope>test</scope>
  </dependency>
  <dependency>
    <groupId>org.mockito</groupId>
    <artifactId>mockito-inline</artifactId>
    <version>${org.mockito.version}</version>
    <scope>test</scope>
  </dependency>
  <dependency>
    <groupId>com.github.spotbugs</groupId>
    <artifactId>spotbugs-annotations</artifactId>
    <version>${com.github.spotbugs.version}</version>
    <scope>provided</scope>
  </dependency>
</dependencies>

<build>
  <resources>
    <resource>
      <directory>src/main/resources</directory>
      <filtering>true</filtering>
    </resource>
  </resources>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-jar-plugin</artifactId>
      <version>${org.apache.maven.plugins.jar.version}</version>
      <configuration>
        <archive>
          <manifest>
            <addClasspath>true</addClasspath>
            <mainClass>${mainClass}</mainClass>
          </manifest>
          <manifestEntries>
            <Premain-Class>${mainClass}</Premain-Class>
            <Agent-Class>${mainClass}</Agent-Class>
          </manifestEntries>
        </archive>
      </configuration>
    </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-shade-plugin</artifactId>
      <version>${org.apache.maven.plugins.shade.version}</version>
      <configuration></configuration>
      <executions>
        <execution>
          <id>shade-jar-with-dependencies</id>
          <phase>package</phase>
          <goals>
            <goal>shade</goal>
          </goals>
          <configuration>
            <createDependencyReducedPom>false</createDependencyReducedPom>
            <useDependencyReducedPomInJar>false</useDependencyReducedPomInJar>
            <createSourcesJar>true</createSourcesJar>
            <shadedArtifactAttached>true</shadedArtifactAttached>
            <shadedClassifierName>shaded</shadedClassifierName>
            <relocations>
              <relocation>
                <pattern>io.cryostat.core</pattern>
                <shadedPattern>${shade.prefix}.io.cryostat.core</shadedPattern>
              </relocation>
              <relocation>
                <pattern>org.projectnessie</pattern>
                <shadedPattern>${shade.prefix}.org.projectnessie</shadedPattern>
              </relocation>
              <relocation>
                <pattern>org.apache</pattern>
                <shadedPattern>${shade.prefix}.org.apache.shaded</shadedPattern>
              </relocation>
              <relocation>
                <pattern>org.slf4j</pattern>
                <shadedPattern>${shade.prefix}.org.slf4j</shadedPattern>
              </relocation>
              <relocation>
                <pattern>java.util.logging.Logger</pattern>
                <shadedPattern>${shade.prefix}.ShadeLogger</shadedPattern>
                <excludes>
                  <exclude>${shade.prefix}.ShadeLogger</exclude>
                </excludes>
              </relocation>
              <relocation>
                <pattern>io.smallrye.config</pattern>
                <shadedPattern>${shade.prefix}.io.smallrye.config</shadedPattern>
              </relocation>
              <relocation>
                <pattern>org.eclipse.microprofile</pattern>
                <shadedPattern>${shade.prefix}.org.eclipse.microprofile</shadedPattern>
              </relocation>
              <relocation>
                <pattern>org.jboss</pattern>
                <shadedPattern>${shade.prefix}.org.jboss</shadedPattern>
              </relocation>
              <relocation>
                <pattern>javax.annotations</pattern>
                <shadedPattern>${shade.prefix}.javax.annotations</shadedPattern>
              </relocation>
              <relocation>
                <pattern>com.fasterxml.jackson</pattern>
                <shadedPattern>${shade.prefix}.com.fasterxml.jackson</shadedPattern>
              </relocation>
            </relocations>
            <transformers>
              <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
              <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer" />
              <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer" />
              <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                  <addHeader>false</addHeader>
              </transformer>
            </transformers>
          </configuration>
        </execution>
      </executions>
    </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>${org.apache.maven.plugins.compiler.version}</version>
      <configuration>
        <forceJavacCompilerUse>true</forceJavacCompilerUse>
        <showDeprecation>true</showDeprecation>
        <showWarnings>true</showWarnings>
        <annotationProcessorPaths>
          <path>
            <groupId>com.google.dagger</groupId>
            <artifactId>dagger-compiler</artifactId>
            <version>${com.google.dagger.compiler.version}</version>
          </path>
        </annotationProcessorPaths>
      </configuration>
    </plugin>
    <plugin>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-maven-plugin</artifactId>
      <version>${com.github.spotbugs.plugin.version}</version>
      <executions>
        <execution>
          <id>spotbugs</id>
          <phase>verify</phase>
          <goals>
            <goal>check</goal>
          </goals>
        </execution>
      </executions>
    </plugin>
    <plugin>
      <groupId>org.jacoco</groupId>
      <artifactId>jacoco-maven-plugin</artifactId>
      <version>${org.jacoco.maven.plugin.version}</version>
      <executions>
        <execution>
          <goals>
            <goal>prepare-agent</goal>
          </goals>
        </execution>
        <execution>
          <id>report</id>
          <phase>verify</phase>
          <goals>
            <goal>report</goal>
          </goals>
        </execution>
      </executions>
    </plugin>
    <plugin>
      <groupId>com.diffplug.spotless</groupId>
      <artifactId>spotless-maven-plugin</artifactId>
      <version>${com.diffplug.spotless.maven.plugin.version}</version>
      <executions>
        <execution>
          <id>spotless</id>
          <phase>verify</phase>
          <goals>
            <goal>check</goal>
          </goals>
        </execution>
      </executions>
      <configuration>
        <java>
          <!-- explicitly specify these directories so that target/generated-sources/ created
          by Dagger aren't checked for formatting. <excludes> doesn't seem to work as expected. -->
          <includes>
            <include>src/main/java/**/*.java</include>
            <include>src/test/java/**/*.java</include>
          </includes>
          <googleJavaFormat>
            <version>${com.google.googlejavaformat.version}</version>
            <style>AOSP</style>
            <reflowLongStrings>true</reflowLongStrings>
          </googleJavaFormat>
          <trimTrailingWhitespace/>
          <endWithNewline/>
          <importOrder>
            <order>java,javax,org.openjdk.jmc,io.cryostat,</order>
          </importOrder>
          <removeUnusedImports/>
        </java>
      </configuration>
    </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-site-plugin</artifactId>
      <version>${org.apache.maven.plugins.site.version}</version>
    </plugin>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-project-info-reports-plugin</artifactId>
      <version>${org.apache.maven.plugins.info.reports.version}</version>
    </plugin>
    <plugin>
      <groupId>com.mycila</groupId>
      <artifactId>license-maven-plugin</artifactId>
      <version>${com.mycila.license.maven.plugin.version}</version>
      <configuration>
        <licenseSets>
          <licenseSet>
            <header>LICENSE</header>
            <includes>
              <include>src/main/**/*.java</include>
              <include>src/test/**/*.java</include>
            </includes>
          </licenseSet>
        </licenseSets>
      </configuration>
      <executions>
        <execution>
          <id>update-license</id>
          <goals>
            <goal>check</goal>
          </goals>
          <phase>process-sources</phase>
        </execution>
      </executions>
    </plugin>
  </plugins>
</build>

<reporting>
  <plugins>
    <plugin>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-maven-plugin</artifactId>
      <version>${com.github.spotbugs.plugin.version}</version>
    </plugin>
    <plugin>
      <groupId>org.jacoco</groupId>
      <artifactId>jacoco-maven-plugin</artifactId>
      <version>${org.jacoco.maven.plugin.version}</version>
      <configuration>
        <excludes>
          <exclude>**/*_Factory.*</exclude>
          <exclude>**/*_Provide*Factory.*</exclude>
          <exclude>**/Dagger*.*</exclude>
          <exclude>**/*Module_*Factory.*</exclude>
          <exclude>**/*Module.*</exclude>
        </excludes>
      </configuration>
      <reportSets>
        <reportSet>
          <reports>
            <report>report</report>
          </reports>
        </reportSet>
      </reportSets>
    </plugin>
  </plugins>
</reporting>

<profiles>
  <profile>
    <id>dep-check</id>
    <build>
      <plugins>
        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>${org.owasp.dependency.check.version}</version>
          <configuration>
            <failBuildOnAnyVulnerability>true</failBuildOnAnyVulnerability>
          </configuration>
          <executions>
            <execution>
              <id>check-for-vulnerable-deps</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>validate</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </build>
  </profile>
</profiles>

</project>
